// 1)
// Main class 


// T class 
// show() -->show 
// show1 print show1 
// show2 print show2 
// sho3 
// show4 

class T {
    void show1()
    {
        System.out.println("This is show1 method");
    }
     void show2()
    {
        System.out.println("This is show2 method");
    }
     void show3()
    {
        System.out.println("This is show3 method");
    }
     void show4()
    {
        System.out.println("This is show4 method");
    }
     void show5()
    {
        System.out.println("This is show5 method");
    }
}

,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,



public class Main{
    public static void main(String[] args)
    {
        T k = new T();
        k.show1();
        k.show2();
        k.show3();
        k.show4();
        k.show5();
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 2)
// Main class 
// access 


// T class 
// five metthod 
// ->addition 
// ->multi 
// ->div 
// ->modular 
// ->sub

// a)constant ----------------------------------->


class T{
    void add()
    {
        int a = 10;
        int b = 20;
        System.out.println("add: "+a+b);
    }
    void sub()
    {
        int a = 10;
        int b = 20;
        System.out.println(a-b);
    }
    void mod()
    {
        int a = 10;
        int b = 20;
        System.out.println("mod: "+a%b);
    }
    void div()
    {
        int a = 10;
        int b = 20;
        System.out.println("div: "+a/b);
    }
    void multi()
    {
        int a = 10;
        int b = 20;
        System.out.println("multi: "+a*b);
    }
}
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
public class Main{
    public static void main(String[] args)
    {
        T k = new T();
        k.add();
        k.mod();
        k.sub();
        k.div();
        k.multi();
    }
}
============================================================================================================================================
// 2)
// Main class 
// access 


// T class 
// five metthod 
// ->addition 
// ->multi 
// ->div 
// ->modular 
// ->subs

// b)user input -------------------------------->


import java.util.*;
class T{
    Scanner sc = new Scanner(System.in);
    int a = sc.nextInt();
    int b = sc.nextInt();
    void add()
    {
        System.out.println(a+b);
    }
    void sub()
    {
        System.out.println(a-b);
    }
    void mod()
    {
        System.out.println(a%b);
    }
    void div()
    {
        System.out.println(a/b);
    }
    void multi()
    {
        System.out.println(a*b);
    }
}
...............................................................
public class Main{
    public static void main(String[] args)
    {
        T k = new T();
        k.add();
        k.mod();
        k.sub();
        k.div();
        k.multi();
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 3)
// Main class 
// access 

// T class 
// number swap 

// E class 
// reverse number 

// S class 
// pallindrome 

// A 
// armstrong 

// F 
// factorial 

// O 
// faibonaccii 

// a)constant ------------------------------------->


public class Main{
    public static void main(String[] args)
    {
        T k = new T();
        k.swap();
       
       
        E e = new E();
        e.reverse();
        
        S s = new S();
        s.pallindrome();
        
        A a = new A();
        a.armstrong();
        
        F f = new F();
        f.factorial();
        
        O o = new O();
        o.faibonaccii();
    }
}
....................................................

// T class 
// number swap 

class T{
    void swap()
    {
        int a = 10;
        int b = 20;
        int c = a;
        System.out.println("before value of a = "+a);
        System.out.println("before value of b = "+b);
         System.out.println();
        a = b;
        b = c;
        System.out.println("After value of a = "+a);
        System.out.println("After value of b = "+b);
    }
}

.........................................................
// E class 
// reverse number 

class E{
    void reverse()
    {
        int num = 1234;
        int rem=0;
        int sum=0;
        
        System.out.println();
        System.out.println("Number: "+num);
        
        while(num>0)
        {
            rem = num%10;
            sum = sum * 10 + rem;
            num = num / 10;
        }
      System.out.println("Reverse number: "+sum);
    }
}
..............................................................
// S class 
// pallindrome

class S{
    void pallindrome()
    {
        int num = 12321;
        int rem=0;
        int sum=0;
        int temp = num;
        
        System.out.println();
        System.out.println(num);
        while(num>0)
        {
            rem = num%10;
            sum = sum * 10 + rem;
            num = num / 10;
       }
         if(temp == sum)
            {
                System.out.println("This is pallindrome Number");
            }
            else{
                System.out.println("Not pallindrome");
           }
    }
}
...................................................................
// A 
// armstrong 


class A{
    void armstrong()
    {
        int num = 153;
        int rem=0;
        int sum=0;
        int temp = num;
        
        System.out.println();
        System.out.println(num);
        while(num>0)
        {
            rem = num%10;
            sum = sum + rem*rem*rem;
            num = num / 10;
       }
         if(temp == sum)
            {
                System.out.println("This is armstrong Number");
            }
            else{
                System.out.println("Not armstrong");
           }
    }
}
....................................................................
// F 
// factorial 

class F{
    void factorial()
    {
        int num = 5;
        int fact = 1;
        
        System.out.println();
         System.out.println(num);
         
        for(int i=1;i<=num;i++)
        {
            fact = fact * i;
        }
        System.out.println(num+" of factorial is: "+fact);
    }
}
.....................................................................
// O 
// faibonaccii 

class O{
    
void faibonaccii()
{
    int first = 1;
    int secound = 1;
    int third;
    int num = 10;
    int i = 1;
    System.out.println();
    System.out.println("faibonaccii of :"+num);
    System.out.print(first+" "+secound);
    
    while(i<num)
    {
        third = first+secound;
        System.out.print(" "+third);
        
        first = secound;
        secound = third;
        i++;
    }
}
}
================================================================= USER INPUT =====================================================================================
public class Main{
    public static void main(String[] args)
    {
        T k = new T();
        k.swap();
       
        E e = new E();
        e.reverse();
        
        S s = new S();
        s.pallindrome();
        
        A a = new A();
        a.armstrong();
        
        F f = new F();
        f.factorial();
        
        O o = new O();
        o.faibonaccii();
    }
}

.......................................................................

// T class 
// number swap 

import java.util.*;
class T{
    void swap()
    {
        Scanner sc = new Scanner(System.in);
        
        System.out.print("enter swap number value of a: ");
        int a = sc.nextInt();
        System.out.print("enter swap number value of b: ");
        int b = sc.nextInt();
        
       
        System.out.println("before value of a = "+a);
        System.out.println("before value of b = "+b);
        System.out.println();
        
        int c = a;
        a = b;
        b = c;
        
        System.out.println("After value of a = "+a);
        System.out.println("After value of b = "+b);
    }
}
.......................................................................
// E class 
// reverse number 
import java.util.*;
class E{
    void reverse()
    {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter revarce number: ");
        int num = sc.nextInt();
        int rem=0;
        int sum=0;
        
        System.out.println();
        System.out.println("Number: "+num);
        
        while(num>0)
        {
            rem = num%10;
            sum = sum * 10 + rem;
            num = num / 10;
        }
      System.out.println("Reverse number: "+sum);
    }
}
.......................................................................
// S class 
// pallindrome

import java.util.*;
class S{
    void pallindrome()
    {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter pallindrome number: ");
        int num = sc.nextInt();
        
        int rem=0;
        int sum=0;
        int temp = num;
        
        System.out.println();
        System.out.println(num);
        while(num>0)
        {
            rem = num%10;
            sum = sum * 10 + rem;
            num = num / 10;
       }
         if(temp == sum)
            {
                System.out.println("This is pallindrome Number");
            }
            else{
                System.out.println("Not pallindrome");
           }
    }
}
...........................................................................

// A 
// armstrong 

import java.util.*;
class A{
    void armstrong()
    {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter armstrong number: ");
        int num = sc.nextInt();
        
        int rem=0;
        int sum=0;
        int temp = num;
        
        System.out.println();
        System.out.println(num);
        while(num>0)
        {
            rem = num%10;
            sum = sum + rem*rem*rem;
            num = num / 10;
       }
         if(temp == sum)
            {
                System.out.println("This is armstrong Number");
            }
            else{
                System.out.println("Not armstrong");
           }
    }
}
.........................................................................
// F 
// factorial 

import java.util.*;
class F{
    void factorial()
    {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter factorial number: ");
        int num = sc.nextInt();
        
        System.out.println();
        System.out.println(num);
        int fact = 1;
        for(int i=1;i<=num;i++)
        {
            fact = fact * i;
        }
        System.out.println(num+" of factorial is: "+fact);
    }
}
............................................................................
// O 
// faibonaccii 

import java.util.*;
class O{
void faibonaccii()
{
    Scanner sc = new Scanner(System.in);
     
    System.out.print("Enter faibonaccii number: ");
    int num = sc.nextInt();
    
    int first = 1;
    int secound = 1;
    int third;
    int i = 1;
    
    System.out.println();
    System.out.println("faibonaccii of :"+num);
    System.out.print(first+" "+secound);
    
    while(i<num)
    {
        third = first+secound;
        System.out.print(" "+third);
        
        first = secound;
        secound = third;
        i++;
    }
}
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
4) 
Main class acess 

T class 
single level inheritance 
Car parent 

T class child car acess 

................................................

public class Main{
    public static void main(String[] args)
    {
        B k = new B();
         k.car();
       
     
    }
}
...................................................


class T{
    void car()
    {
        System.out.println("This is car method");
    }
}
class B extends T{
    
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

5) 
Main class : 
access 


T class 
multilevel inheritance 
Car 
Thar 
T 


public class Main{
    public static void main(String[] args)
    {
        C k = new C();
         k.car();
         k.thar();
         k.engine();
       
     
    }
}
...................................................

class T{
    void car()
    {
        System.out.println("This is car method");
    }
}
class B extends T{
    void thar()
    {
        System.out.println("this is thar method");
    }
}
class C extends B{
    void engine()
    {
        System.out.println("this is engine");
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
6)
Main class : 
access 

T class 
heirarichal 
Parent 
chil1 
child2 


..................................................
public class Main{
    public static void main(String[] args)
    {
        
        chil1 k = new chil1();
        k.show();
        k.show1();
        
        chil2 i = new chil2();
        i.show2();
       
    }
}
......................................................


class Parent{
    void show()
    {
        System.out.println("this is Parent class");
    }
    
}
class chil1 extends Parent{
    void show1()
    {
        System.out.println("this is chil1 class");
    }
}
class chil2 extends Parent{
    void show2()
    {
        System.out.println("this is chil2 class");
    }
}
........................................................

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 7)
// Main class 


// T class 

// a)T class k constructor ko overload krna hey ------------------>



public class Main{
    public static void main(String[] args)
    {
        new T(2);
        new T(3,3);
         
    }
}

..........................................................

class T
     {
T(int a)
   {
 System.out.println(a);   
  }
T(int a, int b)
  {
    System.out.println(a+b);
  }
}

-------------------------------------------------------------------------------------------------------

// 7)
// Main class 


// T class 

// b)T class k constructor ki chaining through this ----------------->


public class Main{
    public static void main(String[] args)
    {
        new T(3,3);
    }
}
..........................................................................


class T
     {
T(int a)
   {
 System.out.println(a);   
  }
T(int a, int b)
  {
      this(3);
    System.out.println(a+b);
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 8) 
// Main class 
// access 

//  second class 
// parent class B show()
// t class k method ka naam bhi samne rkhgene 
// overriding 

single level inheritance-------------------------->

public class Main{
    public static void main(String[] args)
    {
        B k = new B();
        k.show();
    }
}
.........................................................
  
class T {
    void show()
    {
        System.out.println("Hello bro: ");
    }
}
class B extends T{
    void show()
    {
        System.out.println("Hii ");
    }
}
------------------------------------------------------------------------------------------------------------
                                         // b)multilevel ----------------------------------------->


public class Main{
    public static void main(String[] args)
    {
        C k = new C();
        k.show();
    }
}
.......................................................

class T {
    void show()
    {
        System.out.println("Hello bro: ");
    }
}
class B extends T{
    void show()
    {
        System.out.println("Hii ");
    }
}
class C extends B {
    void show()
    {
        System.out.println("Good");
    }
}
-------------------------------------------------------------------------------------------------------------------------------
// c)heirarichal ------------------------------------------->

public class Main
{
  public static void main (String[]args)
  { 
      B f = new B();
      f.show ();

      C k = new C ();
      k.show ();
  }
}
........................................................
 
class T {
    void show()
    {
        System.out.println("Hello bro: ");
    }
}
class B extends T{
    void show()
    {
        System.out.println("Hii ");
    }
}
class C extends T {
    void show()
    {
        System.out.println("Good");
    }
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 8) 
// Main class 
// access 

// 9)
// Main class 

// T class 
// add() =>paramterised  a+b 
// sub() =>paramteriesd
// multi() =>paramterised 
// div() =>paramterised 
// mod() =>paramterised 

// a)constant-----------------------------------------> 



public class Main
{
  public static void main (String[]args)
  { 

      T k = new T ();
      k.add(3,4);
      k.div(5,3);
      k.mod(4,2);
      k.multi(2,3);
      k.sub(8,3);
  }
}
.........................................................

  
class T {
    void add(int a,int b)
    {
        int c = a+b;
        System.out.println("Add: "+c);
    }
    void sub(int a,int b)
    {
        int c = a-b;
        System.out.println("sub: "+c);
    }
    void div(int a,int b)
    {
        int c = a/b;
        System.out.println("div: "+c);
    }
    void mod(int a,int b)
    {
        int c = a%b;
        System.out.println("mod: "+c);
    }
    void multi(int a,int b)
    {
        int c = a*b;
        System.out.println("multi: "+c);
    }
}
------------------------------------------------USER INPUT--------------------------------------------------------------------------
// 8) 
// Main class 
// access 

// 9)
// Main class 

// T class 
// add() =>paramterised  a+b 
// sub() =>paramteriesd
// multi() =>paramterised 
// div() =>paramterised 
// mod() =>paramterised 


// b)user define ------------------------------>


import java.util.*;
public class Main
{
  public static void main (String[]args)
  { 
Scanner sc = new Scanner(System.in);
int a = sc.nextInt();
int b = sc.nextInt();
      T k = new T ();
      k.add(a,b);
      k.div(a,b);
      k.mod(a,b);
      k.multi(a,b);
      k.sub(a,b);
  }
}
.....................................................

 
class T {
    void add(int a,int b)
    {
        int c = a+b;
        System.out.println("Add: "+c);
    }
    void sub(int a,int b)
    {
        int c = a-b;
        System.out.println("sub: "+c);
    }
    void div(int a,int b)
    {
        int c = a/b;
        System.out.println("div: "+c);
    }
    void mod(int a,int b)
    {
        int c = a%b;
        System.out.println("mod: "+c);
    }
    void multi(int a,int b)
    {
        int c = a*b;
        System.out.println("multi: "+c);
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 10) 
// Main class 

// T class 
// A add() =>paramterised 
// B extends A sub() =>paramterised
// C extends B div() =>paramterised  
// E extends C multi() =>paramterised 
// T extends E 
// modylar () =>paramterised 



// a)constant -------------------------->


public class Main
{
  public static void main (String[]args)
  { 

      E k = new E();
      k.add(23,32);
      k.div(56,23);
      k.mod(23,52);
      k.multi(22,32);
      k.sub(23,34);
  }
}

......................................................
 
class T {
    void add(int a,int b)
    {
        int c = a+b;
        System.out.println("Add: "+c);
    }
}
class B extends T{
     void sub(int a,int b)
    {
        int c = a-b;
        System.out.println("sub: "+c);
    }
}

class C extends B{
     void div(int a,int b)
    {
        int c = a/b;
        System.out.println("div: "+c);
    }
}

class D extends C{
    void mod(int a,int b)
    {
        int c = a%b;
        System.out.println("mod: "+c);
    }
}
class E extends D{
     void multi(int a,int b)
    {
        int c = a*b;
        System.out.println("multi: "+c);
    }
}
---------------------------------------------------------------------------------------------
                               USER INPUT ---------------->
import java.util.*;
public class Main
{
  public static void main (String[]args)
  { 
Scanner sc = new Scanner(System.in);
int a = sc.nextInt();
int b = sc.nextInt();

      E k = new E();
      k.add(a,b);
      k.div(a,b);
      k.mod(a,b);
      k.multi(a,b);
      k.sub(a,b);
  }
}

...........................................................

class T {
    void add(int a,int b)
    {
        int c = a+b;
        System.out.println("Add: "+c);
    }
}
class B extends T{
     void sub(int a,int b)
    {
        int c = a-b;
        System.out.println("sub: "+c);
    }
}

class C extends B{
     void div(int a,int b)
    {
        int c = a/b;
        System.out.println("div: "+c);
    }
}

class D extends C{
    void mod(int a,int b)
    {
        int c = a%b;
        System.out.println("mod: "+c);
    }
}
class E extends D{
     void multi(int a,int b)
    {
        int c = a*b;
        System.out.println("multi: "+c);
    }
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
11)
Main class 
access 


T class 
return and no argument 
five metthod 
->addition 
->multi 
->div 
->modular 
->subs


b)user input  ---------------------------------->


public class Main
{
  public static void main (String[]args)
  { 
  
      T k = new T ();
      k.add();
      k.div();
      k.mod();
      k.multi();
      k.sub();
  }
}

..................................................

  
class T {
    int add()
    {
        int a = 22;
        int b = 34;
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
        int sub()
    {
       int a = 22;
        int b = 34;
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
     int div()
    {
        int a = 22;
        int b = 34;
        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
     int mod()
    {
        int a = 22;
        int b = 34;
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
      int multi()
    {
        int a = 22;
        int b = 34;
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
     
}

-------------------------------------------------------------------------------------------
11)
Main class 
access 


T class 
return and no argument 
five metthod 
->addition 
->multi 
->div 
->modular 
->subs
a)constant 
b)user input 


// b)user define ----------------------------------->



public class Main
{
  public static void main (String[]args)
  { 
  
      T k = new T ();
      k.add();
      k.div();
      k.mod();
      k.multi();
      k.sub();
  }
}

..................................................
 import java.util.*; 
class T {
    int add()
    {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
        int sub()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
     int div()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
     int mod()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
      int multi()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
     
}


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

12)
Main class 



T class 
return and no argument 
A add() 
B extends A sub() 
C extends B div() 
E extends C multi() 
T extends E 
modular () 

a)constant -------------------------> 



public class Main
{
  public static void main (String[]args)
  { 
   
      E k = new E ();
      k.add();
      k.div();
      k.mod();
      k.multi();
      k.sub();
  }
}
..............................................................

  
class T {
    int add()
    {
        int a = 20;
        int b = 45;
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
}
class B extends T{
     int sub()
    {
        int a = 20;
        int b = 45;
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
}
class C extends B {
     int div()
    {
        int a = 20;
        int b = 45;
        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
}
class D extends C {
    int mod()
    {
        int a = 20;
        int b = 45;
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
}

class E extends D {
    int multi()
    {
        int a = 20;
        int b = 45;
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
}

-------------------------------------------------------------------------------------------------------------
                                         USER INPUT --------------------->
12)
Main class 



T class 
return and no argument 
A add() 
B extends A sub() 
C extends B div() 
E extends C multi() 
T extends E 
modular () 



public class Main
{
  public static void main (String[]args)
  { 
  
      E k = new E ();
      k.add();
      k.div();
      k.mod();
      k.multi();
      k.sub();
  }
}
......................................................


 import java.util.*; 
class T {
    int add()
    {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
}
class B extends T{
     int sub()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
}
class C extends B {
     int div()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
}
class D extends C {
    int mod()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
}

class E extends D {
    int multi()
    {
         Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 13) 
// Main class 
// access 


// T class 
// return and argument 
// five metthod 
// ->addition 
// ->multi 
// ->div 
// ->modular 
// ->subs


// a)constant -------------------------->


public class Main
{
  public static void main (String[]args)
  { 
  
      T k = new T ();
      k.add(23,32);
      k.div(22,44);
      k.mod(33,44);
      k.multi(32,22);
      k.sub(22,33);
  }
}
......................................................

 
class T {
    int add(int a,int b)
    {
        
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
        int sub(int a,int b)
    {
        
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
     int div(int a,int b)
    {

        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
     int mod(int a,int b)
    {
     
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
      int multi(int a,int b)
    {
      
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
     
}
------------------------------------------------------------------------------------------
                                USER INPUT ------------------>
// 13) 
// Main class 
// access 


// T class 
// return and argument 
// five metthod 
// ->addition 
// ->multi 
// ->div 
// ->modular 
// ->subs

import java.util.*;
public class Main
{
  public static void main (String[]args)
  { 
  Scanner sc = new Scanner(System.in);
  int a = sc.nextInt();
  int b = sc.nextInt();
      T k = new T ();
      k.add(a,b);
      k.div(a,b);
      k.mod(a,b);
      k.multi(a,b);
      k.sub(a,b);
  }
}
......................................................

 
class T {
    int add(int a,int b)
    {
        
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
        int sub(int a,int b)
    {
        
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
     int div(int a,int b)
    {

        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
     int mod(int a,int b)
    {
     
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
      int multi(int a,int b)
    {
      
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
     
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

14)
Main class 



T class 
return and  argument 
A add() 
B extends A sub() 
C extends B div() 
E extends C multi() 
T extends E 
modular () 

USER INPUT ------------------->


public class Main
{
  public static void main (String[]args)
  { 
 
      E k = new E ();
      k.add(23,32);
      k.div(23,44);
      k.mod(22,33);
      k.multi(11,33);
      k.sub(44,33);
  }
}
....................................................

 
class T {
    int add(int a,int b)
    {
        
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
}

class B extends T{
         int sub(int a,int b)
    {
        
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
}

class  C extends B{
     int div(int a,int b)
    {

        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
}
class D extends C{
      int mod(int a,int b)
    {
     
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
}

class E extends D{
      int multi(int a,int b)
    {
      
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
}

--------------------------------------------------------------------------------------------------

14)
Main class 



T class 
return and  argument 
A add() 
B extends A sub() 
C extends B div() 
E extends C multi() 
T extends E 
modular () 

b)user define -------------------------->

import java.util.*;
public class Main
{
  public static void main (String[]args)
  { 
  Scanner sc = new Scanner(System.in);
  int a = sc.nextInt();
  int b = sc.nextInt();
      E k = new E ();
      k.add(a,b);
      k.div(a,b);
      k.mod(a,b);
      k.multi(a,b);
      k.sub(a,b);
  }
}
.....................................................



 
class T {
    int add(int a,int b)
    {
        
        int c = a+b;
        System.out.println("Add: "+c);
        return c;
    }
}

class B extends T{
         int sub(int a,int b)
    {
        
        int c = a-b;
        System.out.println("sub: "+c);
        return c;
    }
}

class  C extends B{
     int div(int a,int b)
    {

        int c = a/b;
        System.out.println("div: "+c);
        return c;
    }
}
class D extends C{
      int mod(int a,int b)
    {
     
        int c = a%b;
        System.out.println("mod: "+c);
        return c;
    }
}

class E extends D{
      int multi(int a,int b)
    {
      
        int c = a*b;
        System.out.println("multi: "+c);
        return c;
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

15) 
Main class 
access 

T class 
getter setter method : single level inheritance 

a)constant------------------<> 




public class Main
{
  public static void main (String[]args)
  {

    B k=new B();
        k.setA(1);
        k.setB(1);
        k.getA();
        k.getB();
        k.show();
  }
}
.......................................................


class T{
    int a;
    void setA(int a)
    {
        this.a=a;
    }
    int getA()  
    {
        return a;
    }
}
class B extends T{
    int b;
    void setB(int b)
    {
        this.b=b;
    }
    int getB()
    {
        return b;
    }
    void show()
    {
        System.out.println(a+b);
    }
}

-------------------------------------------------------------------------------

15) 
Main class 
access 

T class 
getter setter method : single level inheritance 

a) user input ------------------<> 


import java.util.*;
public class Main
{
  public static void main (String[]args)
  {
      Scanner sc = new Scanner(System.in);
      int a = sc.nextInt();
      int b = sc.nextInt();

    B k=new B();
        k.setA(a);
        k.setB(b);
        k.getA();
        k.getB();
        k.show();
  }
}
.....................................................



class T{
    int a;
    void setA(int a)
    {
        this.a=a;
    }
    int getA()  
    {
        return a;
    }
}
class B extends T{
    int b;
    void setB(int b)
    {
        this.b=b;
    }
    int getB()
    {
        return b;
    }
    void show()
    {
        System.out.println(a+b);
    }
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

16)
Main class 
access 

T class 
getter setter method : mutlilevel inheritance 


b)constant -------------------------------->


public class Main
{
  public static void main (String[]args)
  {

    C k=new C();
        k.setA(4);
        k.setB(3);
        k.setC(5);
        
        k.getA();
        k.getB();
        k.getC();
        
        k.show();
  }
}
.....................................................


class T{
    int a;
    void setA(int a)
    {
        this.a=a;
    }
    int getA()  
    {
        return a;
    }
}
class B extends T{
    int b;
    void setB(int b)
    {
        this.b=b;
    }
    int getB()
    {
        return b;
    }
}
class C extends B{
    int c;
    void setC(int c)
    {
        this.c=c;
    }
    int getC()
    {
      return c;
    }
    void show()
    {
        System.out.println(a+b+c);
    }
}

---------------------------------------------------------------------------------------------------------
16)
Main class 
access 

T class 
getter setter method : mutlilevel inheritance 


b)user input -------------------------------->

import java.util.*;
public class Main
{
  public static void main (String[]args)
  {
      Scanner sc = new Scanner(System.in);
      int a = sc.nextInt();
      int b = sc.nextInt();
      int c = sc.nextInt();

    C k=new C();
        k.setA(a);
        k.setB(b);
        k.setC(c);
        
        k.getA();
        k.getB();
        k.getC();
        
        k.show();
  }
}

..........................................................

class T{
    int a;
    void setA(int a)
    {
        this.a=a;
    }
    int getA()  
    {
        return a;
    }
}
class B extends T{
    int b;
    void setB(int b)
    {
        this.b=b;
    }
    int getB()
    {
        return b;
    }
}
class C extends B{
    int c;
    void setC(int c)
    {
        this.c=c;
    }
    int getC()
    {
        return c;
    }
    void show()
    {
        System.out.println(a+b+c);
    }
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

























































































































































